# Job template to deploy to a specific environment
parameters:
  name: '' # The job name.
  projectPaths: ''
  allowedLicensesPath: '' # The JSON file that contains the allowed licenses
  licenseUrlMappingsPath: '' # The JSON file that contains a mapping from license urls to the license that they represent
  excludedPackagesPath: '' # The JSON file that contains the packages to exclude from checking, e.g. because their license cannot be automatically identified, but we know it's ok

steps:
  - script: |
      dotnet new tool-manifest
      dotnet tool install dotnet-project-licenses
    name: ${{ parameters.name }}
    displayName: Install license check dotnet tool

  - task: PowerShell@2
    displayName: Run nuget license check
    inputs:
      targetType: inline
      pwsh: true
      script: |
        dotnet tool run dotnet-project-licenses -i ${{parameters.projectPaths}} -t --use-project-assets-json 
        --allowed-license-types MIT,Apache-2.0,BSD-3-Clause,Apache-2.0 OR MPL-2.0,MS-EULA,X11,Unlicense,0BSD,BSD-2-Clause 
        --licenseurl-to-license-mappings "https://www.bouncycastle.org/csharp/licence.html=X11",
                                         "https://raw.githubusercontent.com/DotNetAnalyzers/DocumentationAnalyzers/489c06575b/LICENSE=MIT",
                                         "https://github.com/dotnet/standard/blob/master/LICENSE.TXT=MIT",
                                         "https://raw.githubusercontent.com/aspnet/AspNetCore/2.0.0/LICENSE.txt=Apache-2.0",
                                         "https://github.com/dotnet/core-setup/blob/master/LICENSE.TXT=MIT",
                                         "https://raw.githubusercontent.com/Microsoft/OpenAPI.NET/master/LICENSE=MIT"
        --packages-filter "Microsoft.Data.SqlClient.SNI.runtime, Microsoft.DotNet.PlatformAbstractions, Microsoft.Extensions.DependencyModel"
        
    




    