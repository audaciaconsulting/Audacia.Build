# sbom-generation.yaml
parameters:
  - name: sbomOutputDir
    type: string
    default: '$(Agent.TempDirectory)/sbom'        # Local folder to store the generated SBOM files.
  - name: lockDepsArtifactDir
    type: string
    default: ''                                    # Path containing the published package-lock.json and deps.json artifact.
  - name: outputFormat
    type: string
    default: 'cyclonedx-json'                      # SBOM output format (e.g., cyclonedx-json).
  - name: publishArtifact
    type: boolean
    default: true                                 # Whether to publish the generated SBOM as a pipeline artifact.
  - name: artifactName
    type: string
    default: 'sbom-files'                          # Artifact name for the generated SBOM files.
  - name: syftInstallDir
    type: string
    default: '$(Agent.TempDirectory)'             # Directory where Syft (the SBOM generator) will be installed.

steps:
  - script: |
      echo "Creating SBOM folder at: ${{ parameters.sbomOutputDir }}"
      mkdir "${{ parameters.sbomOutputDir }}"
    displayName: 'Create SBOM folder'

  - script: |
      echo "Installing Syft (SBOM Generator) into ${{ parameters.syftInstallDir }}"
      curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b "${{ parameters.syftInstallDir }}"
    displayName: 'Install Syft (SBOM Generator)'

  # Generate SBOM for each lock/deps file found in the artifact directory.
  - ${{ if ne(parameters.lockDepsArtifactDir, '') }}:
      - task: PowerShell@2
        displayName: 'Generate SBOM for Lock/Deps Files'
        inputs:
          targetType: 'inline'
          script: |
            Write-Host "Generating SBOM for files in artifact directory: $env:lockDepsArtifactDir"
            # Use the provided parameter value for the lock files folder.
            $lockDepsDir = "${{ parameters.lockDepsArtifactDir }}"
            $sbomOutputDir = "${{ parameters.sbomOutputDir }}"
            # Find all JSON files recursively in the lock files folder.
            $files = Get-ChildItem -Path $lockDepsDir -Recurse -Filter "*.json"
            foreach ($file in $files) {
                if ($file.Name -eq "package-lock.json") {
                    # For npm lock files, use the parent folder name as part of the output file name.
                    $parent = Split-Path -Path $file.DirectoryName -Leaf
                    $outputFile = Join-Path -Path $sbomOutputDir -ChildPath ("sbom-npm-$parent.json")
                    Write-Host "Generating NPM SBOM for $($file.FullName) -> $outputFile"
                    & "${{ parameters.syftInstallDir }}\syft.exe" -o ${{ parameters.outputFormat }}="$outputFile" "$($file.FullName)"
                }
                elseif ($file.Name -eq "deps.json") {
                    # For .NET lock files, similarly generate a .NET SBOM.
                    $parent = Split-Path -Path $file.DirectoryName -Leaf
                    $outputFile = Join-Path -Path $sbomOutputDir -ChildPath ("sbom-dotnet-$parent.json")
                    Write-Host "Generating .NET SBOM for $($file.FullName) -> $outputFile"
                    & "${{ parameters.syftInstallDir }}\syft.exe" -o ${{ parameters.outputFormat }}="$outputFile" "$($file.FullName)"
                }
                else {
                    Write-Host "Skipping file $($file.FullName) as it is not a recognized lock/deps file."
                }
            }

  # Publish the generated SBOM files as an artifact if enabled.
  - ${{ if eq(parameters.publishArtifact, true) }}:
      - task: PublishPipelineArtifact@1
        displayName: 'Publish SBOM Artifact'
        inputs:
          targetPath: ${{ parameters.sbomOutputDir }}
          publishLocation: 'pipeline'
          artifact: ${{ parameters.artifactName }}
