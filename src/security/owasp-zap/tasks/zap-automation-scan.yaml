parameters:
  - name: configFileName
    default: 'zap-automation.yaml'
  - name: contextName
    default: 'DefaultContext'
  - name: targetUrl
    default: ''
  - name: includePath
    default: ''

steps:
  - task: Bash@3
    displayName: 'Generate ZAP Automation Config File'
    inputs:
      targetType: 'inline'
      script: |
        # Set the output file location
        CONFIG_FILE="$(Build.ArtifactStagingDirectory)/${{ parameters.configFileName }}"
        mkdir -p "$(Build.ArtifactStagingDirectory)"
        
        # Build the configuration file line by line
        echo "env:" > "$CONFIG_FILE"
        echo "  contexts:" >> "$CONFIG_FILE"
        echo "  - name: '${{ parameters.contextName }}'" >> "$CONFIG_FILE"
        echo "    urls:" >> "$CONFIG_FILE"
        echo "      - '${{ parameters.targetUrl }}'" >> "$CONFIG_FILE"
        echo "    includePaths:" >> "$CONFIG_FILE"
        echo "      - '${{ parameters.includePath }}'" >> "$CONFIG_FILE"
        echo "    authentication:" >> "$CONFIG_FILE"
        echo "      verification:" >> "$CONFIG_FILE"
        echo "        method: response" >> "$CONFIG_FILE"
        echo "        pollFrequency: 60" >> "$CONFIG_FILE"
        echo "        pollUnits: requests" >> "$CONFIG_FILE"
        echo "        pollUrl: \"\"" >> "$CONFIG_FILE"
        echo "        pollPostData: \"\"" >> "$CONFIG_FILE"
        echo "    sessionManagement:" >> "$CONFIG_FILE"
        echo "      method: cookie" >> "$CONFIG_FILE"
        echo "    technology: {}" >> "$CONFIG_FILE"
        echo "    structure: {}" >> "$CONFIG_FILE"
        echo "  parameters: {}" >> "$CONFIG_FILE"
        echo "jobs:" >> "$CONFIG_FILE"
        echo "- type: passiveScan-config" >> "$CONFIG_FILE"
        echo "  parameters: {}" >> "$CONFIG_FILE"
        echo "- type: spider" >> "$CONFIG_FILE"
        echo "  parameters: {}" >> "$CONFIG_FILE"
        echo "  tests:" >> "$CONFIG_FILE"
        echo "  - name: 'At least 100 URLs found'" >> "$CONFIG_FILE"
        echo "    type: stats" >> "$CONFIG_FILE"
        echo "    onFail: INFO" >> "$CONFIG_FILE"
        echo "    statistic: automation.spider.urls.added" >> "$CONFIG_FILE"
        echo "    operator: '>='" >> "$CONFIG_FILE"
        echo "    value: 100" >> "$CONFIG_FILE"
        echo "- type: spiderAjax" >> "$CONFIG_FILE"
        echo "  parameters: {}" >> "$CONFIG_FILE"
        echo "  tests:" >> "$CONFIG_FILE"
        echo "  - name: 'At least 100 URLs found'" >> "$CONFIG_FILE"
        echo "    type: stats" >> "$CONFIG_FILE"
        echo "    onFail: INFO" >> "$CONFIG_FILE"
        echo "    statistic: spiderAjax.urls.added" >> "$CONFIG_FILE"
        echo "    operator: '>='" >> "$CONFIG_FILE"
        echo "    value: 100" >> "$CONFIG_FILE"
        echo "- type: passiveScan-wait" >> "$CONFIG_FILE"
        echo "  parameters: {}" >> "$CONFIG_FILE"
        echo "- type: report" >> "$CONFIG_FILE"
        echo "  parameters:" >> "$CONFIG_FILE"
        echo "    reportTitle: 'OWASP ZAP Automation Scan Report'" >> "$CONFIG_FILE"
        echo "- type: exitStatus" >> "$CONFIG_FILE"
        echo "  parameters: {}" >> "$CONFIG_FILE"
        
        # Log the generated file to the console
        echo "Generated ZAP Automation configuration file:"
        cat "$CONFIG_FILE"

  - task: PublishBuildArtifacts@1
    displayName: 'Publish ZAP Automation Config File'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'zap-automation-config'
