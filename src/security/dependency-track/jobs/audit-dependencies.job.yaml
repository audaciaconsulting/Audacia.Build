# Job template: end-to-end SBOM audit (Generate → Upload → Deactivate)
parameters:
  - name: dotnetProjectsMultiline
    type: string
    default: ''
  - name: npmRootsMultiline
    type: string
    default: ''
  - name: publishArtifact
    type: boolean
    default: true
  - name: artifactName
    type: string
    default: 'sbom-files'
  - name: outputFormat
    type: string
    default: 'cyclonedx-json'
  - name: nodeVersion
    type: string
    default: '20.x'
  - name: includeLicenseTexts
    type: boolean
    default: true
  - name: failOnUploadError
    type: boolean
    default: true
  - name: deactivateOld
    type: boolean
    default: true
  - name: tryDownloadArtifact
    type: boolean
    default: true

jobs:
  # 1) Generate
  - template: /src/security/dependency-track/jobs/generate-sbom.job.yaml@templates
    parameters:
      dotnetProjectsMultiline: |
        ${{ parameters.dotnetProjectsMultiline }}
      npmRootsMultiline: |
        ${{ parameters.npmRootsMultiline }}
      publishArtifact: ${{ parameters.publishArtifact }}
      artifactName: ${{ parameters.artifactName }}
      outputFormat: ${{ parameters.outputFormat }}
      nodeVersion: ${{ parameters.nodeVersion }}
      includeLicenseTexts: ${{ parameters.includeLicenseTexts }}

  # 2) Upload (depends on generate + sbomReady)
  - template: /src/security/dependency-track/jobs/upload-sbom.job.yaml@templates
    parameters:
      artifactName: ${{ parameters.artifactName }}
      failOnUploadError: ${{ parameters.failOnUploadError }}
      dependsOn: generate_sbom
      condition: and(succeeded(), eq(dependencies.generate_sbom.outputs['exportSbomReady.sbomReady'], 'true'))

  # 3) Deactivate (depends on upload + toggle)
  - template: /src/security/dependency-track/jobs/deactivate-nonlatest.job.yaml@templates
    parameters:
      artifactName: ${{ parameters.artifactName }}
      tryDownloadArtifact: ${{ parameters.tryDownloadArtifact }}
      dependsOn: upload_sbom
      condition: and(succeeded(), eq('${{ parameters.deactivateOld }}', 'true'))
