# Template: checkout source code and setup NuGet/npm caching
steps:
  # Checkout the source code repository
  - checkout: self
    clean: true
    submodules: true
    lfs: true
    fetchDepth: 0

  # Cache NuGet global-packages
  - task: Cache@2
    displayName: "Cache NuGet global-packages"
    inputs:
      key: 'nuget | "$(Agent.OS)" | **/*.csproj,**/*.props,**/*.targets'
      restoreKeys: 'nuget | "$(Agent.OS)"'
      path: 'C:\Users\VssAdministrator\.nuget\packages'

  # Authenticate to Azure Artifacts
  - task: NuGetAuthenticate@1
    displayName: "Authenticate to Azure Artifacts"

  # Detect npm lockfiles so Cache@2 doesn't error when patterns match 0 files
  - pwsh: |
      $ErrorActionPreference = 'Stop'
      $root = '$(System.DefaultWorkingDirectory)'

      $npmLocks  = Get-ChildItem -Path $root -Recurse -Filter 'package-lock.json' -File -EA SilentlyContinue
      $hasNpm  = ($npmLocks.Count  -gt 0)

      Write-Host "Detected lockfiles → npm=$hasNpm"
      Write-Host "##vso[task.setvariable variable=hasNpmLock]$($hasNpm.ToString().ToLower())"
    displayName: "Detect npm lockfiles for cache key"

  # Cache npm downloads (npm lockfile)
  - task: Cache@2
    displayName: "Cache npm cache folder (package-lock.json)"
    condition: and(succeeded(), eq(variables['hasNpmLock'], 'true'))
    inputs:
      key: 'npm | "$(Agent.OS)" | **/package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
      path: '$(Pipeline.Workspace)/.npm'

  # Fallback: no lockfiles yet → generic cache key (prevents Cache@2 from erroring)
  - task: Cache@2
    displayName: "Cache npm cache folder (generic key)"
    condition: and(succeeded(), ne(variables['hasNpmLock'], 'true'))
    inputs:
      key: 'npm | "$(Agent.OS)" | generic'
      restoreKeys: |
        npm | "$(Agent.OS)"
      path: '$(Pipeline.Workspace)/.npm'
