# Template: generate SBOMs (npm + .NET), publish artifact if requested.
parameters:
  # Accept ANY number of .NET project paths
  - name: dotnetProjectsMultiline
    type: string
    default: ''
  # Accept ANY number of npm roots (optional; your sbom-generation-native can also auto-discover)
  - name: npmRootsMultiline
    type: string
    default: ''
  - name: publishArtifact
    type: boolean
    default: true
  - name: artifactName
    type: string
    default: 'sbom-files'
  - name: outputFormat
    type: string
    default: 'cyclonedx-json'
  - name: nodeVersion
    type: string
    default: '20.x'
  - name: includeLicenseTexts
    type: boolean
    default: true

steps:
  - checkout: self
    clean: true
    submodules: true
    lfs: true
    fetchDepth: 0

  - task: Cache@2
    displayName: "Cache NuGet global-packages"
    inputs:
      key: 'nuget | "$(Agent.OS)" | **/*.csproj,**/*.props,**/*.targets'
      restoreKeys: 'nuget | "$(Agent.OS)"'
      path: 'C:\Users\VssAdministrator\.nuget\packages'

  - task: NuGetAuthenticate@1
    displayName: "Authenticate to Azure Artifacts"

  - task: DotNetCoreCLI@2
    displayName: "Restore (pre-warm for CycloneDX)"
    condition: and(succeeded(), ne('${{ parameters.dotnetProjectsMultiline }}',''))
    inputs:
      command: restore
      projects: |
        ${{ parameters.dotnetProjectsMultiline }}
      vstsFeed: 'Audacia.Public/AudaciaPublic'

  - pwsh: |
      Write-Host "##[group]Debug: list npm manifests"
      Write-Host "Workspace root: $(System.DefaultWorkingDirectory)"
      "---- package-lock.json files ----"
      Get-ChildItem -Path '$(System.DefaultWorkingDirectory)' -Recurse -Filter package-lock.json -File -EA SilentlyContinue | Select-Object -Expand FullName
      "---- package.json files ----"
      Get-ChildItem -Path '$(System.DefaultWorkingDirectory)' -Recurse -Filter package.json -File -EA SilentlyContinue | Select-Object -Expand FullName
      Write-Host "##[endgroup]"
    displayName: "Debug: list npm manifests"

  # Reuse your existing shared generator template
  - template: /src/security/sbom/steps/sbom-generation-native.yaml@templates
    parameters:
      publishArtifact: ${{ parameters.publishArtifact }}
      artifactName: ${{ parameters.artifactName }}
      outputFormat: ${{ parameters.outputFormat }}
      nodeVersion: ${{ parameters.nodeVersion }}
      includeLicenseTexts: ${{ parameters.includeLicenseTexts }}
      npmRootsMultiline: |
        ${{ parameters.npmRootsMultiline }}
      dotnetProjectsMultiline: |
        ${{ parameters.dotnetProjectsMultiline }}

  - pwsh: |
      if (Test-Path '$(Agent.TempDirectory)/sbom') {
        Write-Host "SBOM folder found."
        Write-Host "##vso[task.setvariable variable=sbomExists]true"
      } else {
        Write-Host "SBOM folder NOT found."
        Write-Host "##vso[task.setvariable variable=sbomExists]false"
      }
    name: checkSbom
    displayName: "Detect SBOM folder"

  - task: PublishPipelineArtifact@1
    displayName: "Publish SBOM artifact (fallback)"
    condition: and(succeeded(), eq(variables['sbomExists'], 'true'))
    inputs:
      targetPath: $(Agent.TempDirectory)/sbom
      publishLocation: pipeline
      artifact: ${{ parameters.artifactName }}
