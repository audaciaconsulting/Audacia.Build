# Steps to run an NPM dependency check
parameters:
  - name: path
    default: ''
  - name: projectName
    default: 'Build NPM'
  - name: publishAs
    default: ''
  - name: runEvenIfError
    default: false
  - name: continueIfVulnerabilities
    default: false
  - name: suppressionsFilePath
    default: '$(Build.SourcesDirectory)/suppressions.xml'

steps:
  - task: JavaToolInstaller@0
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  # Step 1: Set suppressionsPath (runtime variable)
  - task: PowerShell@2
    name: setVarsNpm
    displayName: Find Suppressions File
    condition: or(succeeded(), and(eq('${{parameters.runEvenIfError}}', true), succeededOrFailed()))
    inputs:
      targetType: inline
      pwsh: true
      script: |
        Write-Host "Checking for: ${{parameters.suppressionsFilePath}}"

        if (Test-Path "${{parameters.suppressionsFilePath}}") {
          Write-Host "Suppressions file found"
          Write-Host "##vso[task.setvariable variable=suppressionsPath]${{parameters.suppressionsFilePath}}"
          Write-Host "##vso[task.setvariable variable=hasSuppression]true"
        }
        else {
          Write-Host "Suppressions file not found"
          Write-Host "##vso[task.setvariable variable=hasSuppression]false"
        }

  # Step 2a: Dependency check WITH suppressions
  - task: dependency-check-build-task@6
    displayName: NPM Dependency Check (with suppressions)
    condition: and(succeeded(), eq(variables['hasSuppression'], 'true'))
    continueOnError: ${{parameters.continueIfVulnerabilities}}
    inputs:
      projectName: ${{parameters.projectName}}
      scanPath: '${{parameters.path}}/package-lock.json'
      format: 'HTML,JUNIT'
      failOnCVSS: '1'
      additionalArguments: '--nodeAuditSkipDevDependencies --disableNodeJS --nvdApiKey "cb027565-2f22-4e16-8992-9bf0a9a0cadc"'
      suppressionPath: '$(suppressionsPath)'

  # Step 2b: Dependency check WITHOUT suppressions
  - task: dependency-check-build-task@6
    displayName: NPM Dependency Check (no suppressions)
    condition: and(succeeded(), ne(variables['hasSuppression'], 'true'))
    continueOnError: ${{parameters.continueIfVulnerabilities}}
    inputs:
      projectName: ${{parameters.projectName}}
      scanPath: '${{parameters.path}}/package-lock.json'
      format: 'HTML,JUNIT'
      failOnCVSS: '1'
      additionalArguments: '--nodeAuditSkipDevDependencies --disableNodeJS --nvdApiKey "cb027565-2f22-4e16-8992-9bf0a9a0cadc"'

  # Check if report exists, when not skipped and artifact name provided
  - task: PowerShell@2
    displayName: Check for Dependency Check Report
    condition: and(succeededOrFailed(), ne('${{parameters.publishAs}}', ''))
    inputs:
      targetType: inline
      pwsh: true
      script: |
        if (Test-Path "$(Common.TestResultsDirectory)\dependency-check\dependency-check-report.html") {
          Write-Host "##vso[task.setVariable variable=ReportExists]true"
        }

  # Republish report to unique artifact
  - publish: $(Common.TestResultsDirectory)\dependency-check
    displayName: Republish Dependency Check Report
    condition: eq(variables['ReportExists'], 'true')
    artifact: ${{parameters.publishAs}}

  - task: PublishTestResults@2
    displayName: Publish JUnit Results
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/dependency-check-junit.xml'
      testRunTitle: ${{parameters.publishAs}}
      searchFolder: $(Common.TestResultsDirectory)\dependency-check\
      failTaskOnFailedTests: true